{
  "src/lib/components/AgGrid.react.js": {
    "description": "AgGrid is a component wrapped on ag-Grid.\nIt takes two property, `columnDefs`, and `rowData`\ndisplays them.",
    "displayName": "AgGrid",
    "methods": [
      {
        "name": "onSelectionChanged",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      },
      {
        "name": "getMainMenuItems",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "params",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "gridApi": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "gridApi for ag-Grid."
      },
      "columnDefs": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "columnDefs for ag-Grid."
      },
      "rowData": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "rowData for ag-Grid."
      },
      "selectedRows": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "selectedRows for ag-Grid."
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/ApexChart.react.js": {
    "description": "Wrapper for react-apexcharts library. For API and\nexamples see:\n\nhttps://github.com/apexcharts/react-apexcharts",
    "displayName": "ApexChart",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "line, area, bar, pie, donut, scatter, bubble, heatmap, radialBar",
        "defaultValue": {
          "value": "'line'",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Possible values for width can be 100%, 400px or 400 (by default is 100%)",
        "defaultValue": {
          "value": "'100%'",
          "computed": false
        }
      },
      "height": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "string"
            },
            {
              "name": "number"
            }
          ]
        },
        "required": false,
        "description": "Possible values for height can be 100%, 300px or 300 (by default is auto)",
        "defaultValue": {
          "value": "'auto'",
          "computed": false
        }
      },
      "series": {
        "type": {
          "name": "array"
        },
        "required": true,
        "description": "The series is a set of data. To know more about the format of\nthe data, checkout Series docs on the website."
      },
      "options": {
        "type": {
          "name": "object"
        },
        "required": true,
        "description": "The configuration object, see options on API (Reference)"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  },
  "src/lib/components/RenderJson.react.js": {
    "description": "",
    "displayName": "RenderJson",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "data": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The value displayed in the input."
      },
      "max_depth": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "theme": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "{\n        scheme: 'monokai',\n        author: 'wimer hazenberg (http://www.monokai.nl)',\n        base00: '#272822',\n        base01: '#383830',\n        base02: '#49483e',\n        base03: '#75715e',\n        base04: '#a59f85',\n        base05: '#f8f8f2',\n        base06: '#f5f4f1',\n        base07: '#f9f8f5',\n        base08: '#f92672',\n        base09: '#fd971f',\n        base0A: '#f4bf75',\n        base0B: '#a6e22e',\n        base0C: '#a1efe4',\n        base0D: '#66d9ef',\n        base0E: '#ae81ff',\n        base0F: '#cc6633'\n    }",
          "computed": false
        }
      },
      "invert_theme": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/S3Uploader.react.js": {
    "description": "",
    "displayName": "S3Uploader",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "label": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A label that will be printed when this component is rendered.",
        "defaultValue": {
          "value": "'Drop files here or %{browse}'",
          "computed": false
        }
      },
      "schema_id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "files": {
        "type": {
          "name": "objectOf",
          "value": {
            "name": "object"
          }
        },
        "required": false,
        "description": "The files being uploaded.",
        "defaultValue": {
          "value": "{}",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      },
      "parallelUploads": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bigint"
        },
        "required": false,
        "description": "Limit the amount of uploads going on at the same time. This is passed through to XHRUpload; \nSet to 0 to disable limiting.",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "maxUploads": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bigint"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "5",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/Table.react.js": {
    "description": "",
    "displayName": "Table",
    "methods": [],
    "props": {
      "rows": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": ""
      },
      "columns": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": ""
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "enableRangeSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "enableRowSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      },
      "enableColumnSelection": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": ""
      }
    }
  }
}